
@prefix : <http://example.net/vocab/> .
@prefix ns: <http://example.com/ns/> .
@prefix ns2: <http://example.com/ns/2/> .
@prefix ns.3: <http://example.com/ns/3/> .
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
base <http://example.org/>

# a comment
<http://example.org/thing#it> a :Thing; # a type
  :label "Just a Thing."@en-GB ;
  :homepage <http://example.org/thing.html>;
  :name "Thing";
  :date "1900"^^xsd:gYear;
  :date "2000"^^xsd:gYear;
  ns:def true, false ; :number -11 .

</literal/1> :value '''multiline
               'string\'''' .

</literal/2> :value """multiline
               "string\"""" . # "

</numbers> :number 1, +2, -3,
    4.0, +4.1, -4.2,
    5e0, +5e1, -5e2, 6e+0, 6e-1, 1.3e37 .

</other> a :Thing .

</just> </some> </IRIs> .

</blank/1> :item [ :name "Blank 1" ] .
</blank/1.x> :item [ :name "Blank 1.1" ], [ :name "Blank 1.2" ] .

[] :name "Blank 2".

[ :name "Blank 3" ] .

_:blank4 :name "Blank 4".

_:blank5 :rel _:blank6 .

<items> :value (<one> "two" 3).

ns:term a ns:Thing .
:term a ns:Term .
: a ns:Set .

ns2:term2 :term2 ns2:Term2 .

ns.3:term.3 :term.3 ns2:Term.3 .

:hyphened-term :hyphened-term :hyphened-term .

:term :term :term .

: : : .

# TODO: either forbid last form or use rdf:type in output
#<> a :Thing, ns:Thing, <other/Thing> .

# pnames should become objects (not strings)
<item> :value :one, ns:two, <three> .
<items> :value (:one ns:two <three>).

{
    <doc> a :Document .
    <thing> a :Thing .
}

<doc> {
    <doc> a :Document .
    <thing> a :Thing .
}

GRAPH <doc> {
    <doc> a :Document .
    <thing> a :Thing .
}
